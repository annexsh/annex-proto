// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file annex/common/pagination/v1/message.proto (package annex.common.pagination.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message annex.common.pagination.v1.PaginationToken
 */
export class PaginationToken extends Message<PaginationToken> {
  /**
   * @generated from field: string offset_id = 1;
   */
  offsetId = "";

  constructor(data?: PartialMessage<PaginationToken>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "annex.common.pagination.v1.PaginationToken";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaginationToken {
    return new PaginationToken().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaginationToken {
    return new PaginationToken().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaginationToken {
    return new PaginationToken().fromJsonString(jsonString, options);
  }

  static equals(a: PaginationToken | PlainMessage<PaginationToken> | undefined, b: PaginationToken | PlainMessage<PaginationToken> | undefined): boolean {
    return proto3.util.equals(PaginationToken, a, b);
  }
}

