"use strict";
// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file annex/tests/v1/test_service.proto (package annex.tests.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListTestExecutionLogsResponse = exports.ListTestExecutionLogsRequest = exports.PublishLogResponse = exports.PublishLogRequest = exports.AckCaseExecutionFinishedResponse = exports.AckCaseExecutionFinishedRequest = exports.AckCaseExecutionStartedResponse = exports.AckCaseExecutionStartedRequest = exports.AckCaseExecutionScheduledResponse = exports.AckCaseExecutionScheduledRequest = exports.AckTestExecutionFinishedResponse = exports.AckTestExecutionFinishedRequest = exports.AckTestExecutionStartedResponse = exports.AckTestExecutionStartedRequest = exports.ListCaseExecutionsResponse = exports.ListCaseExecutionsRequest = exports.ListTestExecutionsResponse = exports.ListTestExecutionsRequest = exports.GetTestExecutionResponse = exports.GetTestExecutionRequest = exports.RetryTestExecutionResponse = exports.RetryTestExecutionRequest = exports.ExecuteTestResponse = exports.ExecuteTestRequest = exports.GetTestDefaultInputResponse = exports.GetTestDefaultInputRequest = exports.GetTestResponse = exports.GetTestRequest = exports.ListTestsResponse = exports.ListTestsRequest = exports.RegisterTestsResponse = exports.RegisterTestsRequest = exports.ListTestSuitesResponse = exports.ListTestSuitesRequest = exports.GetTestSuiteResponse = exports.GetTestSuiteRequest = exports.RegisterTestSuiteResponse = exports.RegisterTestSuiteRequest = exports.ListContextsResponse = exports.ListContextsRequest = exports.RegisterContextResponse = exports.RegisterContextRequest = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const test_pb_js_1 = require("./test_pb.js");
/**
 * @generated from message annex.tests.v1.RegisterContextRequest
 */
class RegisterContextRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RegisterContextRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RegisterContextRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RegisterContextRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RegisterContextRequest, a, b);
    }
}
exports.RegisterContextRequest = RegisterContextRequest;
RegisterContextRequest.runtime = protobuf_1.proto3;
RegisterContextRequest.typeName = "annex.tests.v1.RegisterContextRequest";
RegisterContextRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.RegisterContextResponse
 */
class RegisterContextResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RegisterContextResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RegisterContextResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RegisterContextResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RegisterContextResponse, a, b);
    }
}
exports.RegisterContextResponse = RegisterContextResponse;
RegisterContextResponse.runtime = protobuf_1.proto3;
RegisterContextResponse.typeName = "annex.tests.v1.RegisterContextResponse";
RegisterContextResponse.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * @generated from message annex.tests.v1.ListContextsRequest
 */
class ListContextsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: int32 page_size = 1;
         */
        this.pageSize = 0;
        /**
         * @generated from field: string next_page_token = 2;
         */
        this.nextPageToken = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListContextsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListContextsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListContextsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ListContextsRequest, a, b);
    }
}
exports.ListContextsRequest = ListContextsRequest;
ListContextsRequest.runtime = protobuf_1.proto3;
ListContextsRequest.typeName = "annex.tests.v1.ListContextsRequest";
ListContextsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.ListContextsResponse
 */
class ListContextsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated string contexts = 1;
         */
        this.contexts = [];
        /**
         * @generated from field: string next_page_token = 2;
         */
        this.nextPageToken = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListContextsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListContextsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListContextsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ListContextsResponse, a, b);
    }
}
exports.ListContextsResponse = ListContextsResponse;
ListContextsResponse.runtime = protobuf_1.proto3;
ListContextsResponse.typeName = "annex.tests.v1.ListContextsResponse";
ListContextsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "contexts", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.RegisterTestSuiteRequest
 */
class RegisterTestSuiteRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: string name = 2;
         */
        this.name = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RegisterTestSuiteRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RegisterTestSuiteRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RegisterTestSuiteRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RegisterTestSuiteRequest, a, b);
    }
}
exports.RegisterTestSuiteRequest = RegisterTestSuiteRequest;
RegisterTestSuiteRequest.runtime = protobuf_1.proto3;
RegisterTestSuiteRequest.typeName = "annex.tests.v1.RegisterTestSuiteRequest";
RegisterTestSuiteRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
]);
/**
 * @generated from message annex.tests.v1.RegisterTestSuiteResponse
 */
class RegisterTestSuiteResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string id = 1;
         */
        this.id = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RegisterTestSuiteResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RegisterTestSuiteResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RegisterTestSuiteResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RegisterTestSuiteResponse, a, b);
    }
}
exports.RegisterTestSuiteResponse = RegisterTestSuiteResponse;
RegisterTestSuiteResponse.runtime = protobuf_1.proto3;
RegisterTestSuiteResponse.typeName = "annex.tests.v1.RegisterTestSuiteResponse";
RegisterTestSuiteResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.GetTestSuiteRequest
 */
class GetTestSuiteRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: string id = 2;
         */
        this.id = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetTestSuiteRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetTestSuiteRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetTestSuiteRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetTestSuiteRequest, a, b);
    }
}
exports.GetTestSuiteRequest = GetTestSuiteRequest;
GetTestSuiteRequest.runtime = protobuf_1.proto3;
GetTestSuiteRequest.typeName = "annex.tests.v1.GetTestSuiteRequest";
GetTestSuiteRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.GetTestSuiteResponse
 */
class GetTestSuiteResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetTestSuiteResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetTestSuiteResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetTestSuiteResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetTestSuiteResponse, a, b);
    }
}
exports.GetTestSuiteResponse = GetTestSuiteResponse;
GetTestSuiteResponse.runtime = protobuf_1.proto3;
GetTestSuiteResponse.typeName = "annex.tests.v1.GetTestSuiteResponse";
GetTestSuiteResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "test_suite", kind: "message", T: test_pb_js_1.TestSuite },
]);
/**
 * @generated from message annex.tests.v1.ListTestSuitesRequest
 */
class ListTestSuitesRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: int32 page_size = 2;
         */
        this.pageSize = 0;
        /**
         * @generated from field: string next_page_token = 3;
         */
        this.nextPageToken = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListTestSuitesRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListTestSuitesRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListTestSuitesRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ListTestSuitesRequest, a, b);
    }
}
exports.ListTestSuitesRequest = ListTestSuitesRequest;
ListTestSuitesRequest.runtime = protobuf_1.proto3;
ListTestSuitesRequest.typeName = "annex.tests.v1.ListTestSuitesRequest";
ListTestSuitesRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.ListTestSuitesResponse
 */
class ListTestSuitesResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated annex.tests.v1.TestSuite test_suites = 1;
         */
        this.testSuites = [];
        /**
         * @generated from field: string next_page_token = 2;
         */
        this.nextPageToken = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListTestSuitesResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListTestSuitesResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListTestSuitesResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ListTestSuitesResponse, a, b);
    }
}
exports.ListTestSuitesResponse = ListTestSuitesResponse;
ListTestSuitesResponse.runtime = protobuf_1.proto3;
ListTestSuitesResponse.typeName = "annex.tests.v1.ListTestSuitesResponse";
ListTestSuitesResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "test_suites", kind: "message", T: test_pb_js_1.TestSuite, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.RegisterTestsRequest
 */
class RegisterTestsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: string test_suite_id = 2;
         */
        this.testSuiteId = "";
        /**
         * @generated from field: string version = 4;
         */
        this.version = "";
        /**
         * @generated from field: string runner_id = 5;
         */
        this.runnerId = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RegisterTestsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RegisterTestsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RegisterTestsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RegisterTestsRequest, a, b);
    }
}
exports.RegisterTestsRequest = RegisterTestsRequest;
RegisterTestsRequest.runtime = protobuf_1.proto3;
RegisterTestsRequest.typeName = "annex.tests.v1.RegisterTestsRequest";
RegisterTestsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "test_suite_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "definition", kind: "message", T: test_pb_js_1.TestDefinition },
    { no: 4, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "runner_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.RegisterTestsResponse
 */
class RegisterTestsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RegisterTestsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RegisterTestsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RegisterTestsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RegisterTestsResponse, a, b);
    }
}
exports.RegisterTestsResponse = RegisterTestsResponse;
RegisterTestsResponse.runtime = protobuf_1.proto3;
RegisterTestsResponse.typeName = "annex.tests.v1.RegisterTestsResponse";
RegisterTestsResponse.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * @generated from message annex.tests.v1.ListTestsRequest
 */
class ListTestsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: string test_suite_id = 2;
         */
        this.testSuiteId = "";
        /**
         * @generated from field: int32 page_size = 3;
         */
        this.pageSize = 0;
        /**
         * @generated from field: string next_page_token = 4;
         */
        this.nextPageToken = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListTestsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListTestsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListTestsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ListTestsRequest, a, b);
    }
}
exports.ListTestsRequest = ListTestsRequest;
ListTestsRequest.runtime = protobuf_1.proto3;
ListTestsRequest.typeName = "annex.tests.v1.ListTestsRequest";
ListTestsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "test_suite_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.ListTestsResponse
 */
class ListTestsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated annex.tests.v1.Test tests = 1;
         */
        this.tests = [];
        /**
         * @generated from field: string next_page_token = 2;
         */
        this.nextPageToken = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListTestsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListTestsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListTestsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ListTestsResponse, a, b);
    }
}
exports.ListTestsResponse = ListTestsResponse;
ListTestsResponse.runtime = protobuf_1.proto3;
ListTestsResponse.typeName = "annex.tests.v1.ListTestsResponse";
ListTestsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "tests", kind: "message", T: test_pb_js_1.Test, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.GetTestRequest
 */
class GetTestRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: string test_id = 2;
         */
        this.testId = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetTestRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetTestRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetTestRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetTestRequest, a, b);
    }
}
exports.GetTestRequest = GetTestRequest;
GetTestRequest.runtime = protobuf_1.proto3;
GetTestRequest.typeName = "annex.tests.v1.GetTestRequest";
GetTestRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "test_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.GetTestResponse
 */
class GetTestResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetTestResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetTestResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetTestResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetTestResponse, a, b);
    }
}
exports.GetTestResponse = GetTestResponse;
GetTestResponse.runtime = protobuf_1.proto3;
GetTestResponse.typeName = "annex.tests.v1.GetTestResponse";
GetTestResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "test", kind: "message", T: test_pb_js_1.Test },
]);
/**
 * @generated from message annex.tests.v1.GetTestDefaultInputRequest
 */
class GetTestDefaultInputRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: string test_id = 2;
         */
        this.testId = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetTestDefaultInputRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetTestDefaultInputRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetTestDefaultInputRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetTestDefaultInputRequest, a, b);
    }
}
exports.GetTestDefaultInputRequest = GetTestDefaultInputRequest;
GetTestDefaultInputRequest.runtime = protobuf_1.proto3;
GetTestDefaultInputRequest.typeName = "annex.tests.v1.GetTestDefaultInputRequest";
GetTestDefaultInputRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "test_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.GetTestDefaultInputResponse
 */
class GetTestDefaultInputResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string default_input = 1;
         */
        this.defaultInput = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetTestDefaultInputResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetTestDefaultInputResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetTestDefaultInputResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetTestDefaultInputResponse, a, b);
    }
}
exports.GetTestDefaultInputResponse = GetTestDefaultInputResponse;
GetTestDefaultInputResponse.runtime = protobuf_1.proto3;
GetTestDefaultInputResponse.typeName = "annex.tests.v1.GetTestDefaultInputResponse";
GetTestDefaultInputResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "default_input", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.ExecuteTestRequest
 */
class ExecuteTestRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: string test_id = 2;
         */
        this.testId = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ExecuteTestRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ExecuteTestRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ExecuteTestRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ExecuteTestRequest, a, b);
    }
}
exports.ExecuteTestRequest = ExecuteTestRequest;
ExecuteTestRequest.runtime = protobuf_1.proto3;
ExecuteTestRequest.typeName = "annex.tests.v1.ExecuteTestRequest";
ExecuteTestRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "test_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "input", kind: "message", T: test_pb_js_1.Payload, opt: true },
]);
/**
 * @generated from message annex.tests.v1.ExecuteTestResponse
 */
class ExecuteTestResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ExecuteTestResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ExecuteTestResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ExecuteTestResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ExecuteTestResponse, a, b);
    }
}
exports.ExecuteTestResponse = ExecuteTestResponse;
ExecuteTestResponse.runtime = protobuf_1.proto3;
ExecuteTestResponse.typeName = "annex.tests.v1.ExecuteTestResponse";
ExecuteTestResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "test_execution", kind: "message", T: test_pb_js_1.TestExecution },
]);
/**
 * @generated from message annex.tests.v1.RetryTestExecutionRequest
 */
class RetryTestExecutionRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: string test_execution_id = 2;
         */
        this.testExecutionId = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RetryTestExecutionRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RetryTestExecutionRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RetryTestExecutionRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RetryTestExecutionRequest, a, b);
    }
}
exports.RetryTestExecutionRequest = RetryTestExecutionRequest;
RetryTestExecutionRequest.runtime = protobuf_1.proto3;
RetryTestExecutionRequest.typeName = "annex.tests.v1.RetryTestExecutionRequest";
RetryTestExecutionRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "test_execution_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.RetryTestExecutionResponse
 */
class RetryTestExecutionResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RetryTestExecutionResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RetryTestExecutionResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RetryTestExecutionResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RetryTestExecutionResponse, a, b);
    }
}
exports.RetryTestExecutionResponse = RetryTestExecutionResponse;
RetryTestExecutionResponse.runtime = protobuf_1.proto3;
RetryTestExecutionResponse.typeName = "annex.tests.v1.RetryTestExecutionResponse";
RetryTestExecutionResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "test_execution", kind: "message", T: test_pb_js_1.TestExecution },
]);
/**
 * @generated from message annex.tests.v1.GetTestExecutionRequest
 */
class GetTestExecutionRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: string test_execution_id = 2;
         */
        this.testExecutionId = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetTestExecutionRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetTestExecutionRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetTestExecutionRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetTestExecutionRequest, a, b);
    }
}
exports.GetTestExecutionRequest = GetTestExecutionRequest;
GetTestExecutionRequest.runtime = protobuf_1.proto3;
GetTestExecutionRequest.typeName = "annex.tests.v1.GetTestExecutionRequest";
GetTestExecutionRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "test_execution_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.GetTestExecutionResponse
 */
class GetTestExecutionResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetTestExecutionResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetTestExecutionResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetTestExecutionResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(GetTestExecutionResponse, a, b);
    }
}
exports.GetTestExecutionResponse = GetTestExecutionResponse;
GetTestExecutionResponse.runtime = protobuf_1.proto3;
GetTestExecutionResponse.typeName = "annex.tests.v1.GetTestExecutionResponse";
GetTestExecutionResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "test_execution", kind: "message", T: test_pb_js_1.TestExecution },
    { no: 2, name: "input", kind: "message", T: test_pb_js_1.Payload, opt: true },
]);
/**
 * @generated from message annex.tests.v1.ListTestExecutionsRequest
 */
class ListTestExecutionsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: string test_id = 2;
         */
        this.testId = "";
        /**
         * @generated from field: int32 page_size = 3;
         */
        this.pageSize = 0;
        /**
         * @generated from field: string next_page_token = 4;
         */
        this.nextPageToken = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListTestExecutionsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListTestExecutionsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListTestExecutionsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ListTestExecutionsRequest, a, b);
    }
}
exports.ListTestExecutionsRequest = ListTestExecutionsRequest;
ListTestExecutionsRequest.runtime = protobuf_1.proto3;
ListTestExecutionsRequest.typeName = "annex.tests.v1.ListTestExecutionsRequest";
ListTestExecutionsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "test_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.ListTestExecutionsResponse
 */
class ListTestExecutionsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated annex.tests.v1.TestExecution test_executions = 1;
         */
        this.testExecutions = [];
        /**
         * @generated from field: string next_page_token = 2;
         */
        this.nextPageToken = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListTestExecutionsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListTestExecutionsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListTestExecutionsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ListTestExecutionsResponse, a, b);
    }
}
exports.ListTestExecutionsResponse = ListTestExecutionsResponse;
ListTestExecutionsResponse.runtime = protobuf_1.proto3;
ListTestExecutionsResponse.typeName = "annex.tests.v1.ListTestExecutionsResponse";
ListTestExecutionsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "test_executions", kind: "message", T: test_pb_js_1.TestExecution, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.ListCaseExecutionsRequest
 */
class ListCaseExecutionsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: string test_execution_id = 2;
         */
        this.testExecutionId = "";
        /**
         * @generated from field: int32 page_size = 3;
         */
        this.pageSize = 0;
        /**
         * @generated from field: string next_page_token = 4;
         */
        this.nextPageToken = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListCaseExecutionsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListCaseExecutionsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListCaseExecutionsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ListCaseExecutionsRequest, a, b);
    }
}
exports.ListCaseExecutionsRequest = ListCaseExecutionsRequest;
ListCaseExecutionsRequest.runtime = protobuf_1.proto3;
ListCaseExecutionsRequest.typeName = "annex.tests.v1.ListCaseExecutionsRequest";
ListCaseExecutionsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "test_execution_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.ListCaseExecutionsResponse
 */
class ListCaseExecutionsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated annex.tests.v1.CaseExecution case_executions = 1;
         */
        this.caseExecutions = [];
        /**
         * @generated from field: string next_page_token = 2;
         */
        this.nextPageToken = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListCaseExecutionsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListCaseExecutionsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListCaseExecutionsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ListCaseExecutionsResponse, a, b);
    }
}
exports.ListCaseExecutionsResponse = ListCaseExecutionsResponse;
ListCaseExecutionsResponse.runtime = protobuf_1.proto3;
ListCaseExecutionsResponse.typeName = "annex.tests.v1.ListCaseExecutionsResponse";
ListCaseExecutionsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "case_executions", kind: "message", T: test_pb_js_1.CaseExecution, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.AckTestExecutionStartedRequest
 */
class AckTestExecutionStartedRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: string test_execution_id = 2;
         */
        this.testExecutionId = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AckTestExecutionStartedRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AckTestExecutionStartedRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AckTestExecutionStartedRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AckTestExecutionStartedRequest, a, b);
    }
}
exports.AckTestExecutionStartedRequest = AckTestExecutionStartedRequest;
AckTestExecutionStartedRequest.runtime = protobuf_1.proto3;
AckTestExecutionStartedRequest.typeName = "annex.tests.v1.AckTestExecutionStartedRequest";
AckTestExecutionStartedRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "test_execution_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "start_time", kind: "message", T: protobuf_1.Timestamp },
]);
/**
 * @generated from message annex.tests.v1.AckTestExecutionStartedResponse
 */
class AckTestExecutionStartedResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AckTestExecutionStartedResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AckTestExecutionStartedResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AckTestExecutionStartedResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AckTestExecutionStartedResponse, a, b);
    }
}
exports.AckTestExecutionStartedResponse = AckTestExecutionStartedResponse;
AckTestExecutionStartedResponse.runtime = protobuf_1.proto3;
AckTestExecutionStartedResponse.typeName = "annex.tests.v1.AckTestExecutionStartedResponse";
AckTestExecutionStartedResponse.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * @generated from message annex.tests.v1.AckTestExecutionFinishedRequest
 */
class AckTestExecutionFinishedRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: string test_execution_id = 2;
         */
        this.testExecutionId = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AckTestExecutionFinishedRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AckTestExecutionFinishedRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AckTestExecutionFinishedRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AckTestExecutionFinishedRequest, a, b);
    }
}
exports.AckTestExecutionFinishedRequest = AckTestExecutionFinishedRequest;
AckTestExecutionFinishedRequest.runtime = protobuf_1.proto3;
AckTestExecutionFinishedRequest.typeName = "annex.tests.v1.AckTestExecutionFinishedRequest";
AckTestExecutionFinishedRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "test_execution_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "finish_time", kind: "message", T: protobuf_1.Timestamp },
    { no: 4, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
]);
/**
 * @generated from message annex.tests.v1.AckTestExecutionFinishedResponse
 */
class AckTestExecutionFinishedResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AckTestExecutionFinishedResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AckTestExecutionFinishedResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AckTestExecutionFinishedResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AckTestExecutionFinishedResponse, a, b);
    }
}
exports.AckTestExecutionFinishedResponse = AckTestExecutionFinishedResponse;
AckTestExecutionFinishedResponse.runtime = protobuf_1.proto3;
AckTestExecutionFinishedResponse.typeName = "annex.tests.v1.AckTestExecutionFinishedResponse";
AckTestExecutionFinishedResponse.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * @generated from message annex.tests.v1.AckCaseExecutionScheduledRequest
 */
class AckCaseExecutionScheduledRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: string test_execution_id = 2;
         */
        this.testExecutionId = "";
        /**
         * @generated from field: int32 case_execution_id = 3;
         */
        this.caseExecutionId = 0;
        /**
         * @generated from field: string case_name = 4;
         */
        this.caseName = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AckCaseExecutionScheduledRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AckCaseExecutionScheduledRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AckCaseExecutionScheduledRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AckCaseExecutionScheduledRequest, a, b);
    }
}
exports.AckCaseExecutionScheduledRequest = AckCaseExecutionScheduledRequest;
AckCaseExecutionScheduledRequest.runtime = protobuf_1.proto3;
AckCaseExecutionScheduledRequest.typeName = "annex.tests.v1.AckCaseExecutionScheduledRequest";
AckCaseExecutionScheduledRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "test_execution_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "case_execution_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "case_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "schedule_time", kind: "message", T: protobuf_1.Timestamp },
]);
/**
 * @generated from message annex.tests.v1.AckCaseExecutionScheduledResponse
 */
class AckCaseExecutionScheduledResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AckCaseExecutionScheduledResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AckCaseExecutionScheduledResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AckCaseExecutionScheduledResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AckCaseExecutionScheduledResponse, a, b);
    }
}
exports.AckCaseExecutionScheduledResponse = AckCaseExecutionScheduledResponse;
AckCaseExecutionScheduledResponse.runtime = protobuf_1.proto3;
AckCaseExecutionScheduledResponse.typeName = "annex.tests.v1.AckCaseExecutionScheduledResponse";
AckCaseExecutionScheduledResponse.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * @generated from message annex.tests.v1.AckCaseExecutionStartedRequest
 */
class AckCaseExecutionStartedRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: string test_execution_id = 2;
         */
        this.testExecutionId = "";
        /**
         * @generated from field: int32 case_execution_id = 3;
         */
        this.caseExecutionId = 0;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AckCaseExecutionStartedRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AckCaseExecutionStartedRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AckCaseExecutionStartedRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AckCaseExecutionStartedRequest, a, b);
    }
}
exports.AckCaseExecutionStartedRequest = AckCaseExecutionStartedRequest;
AckCaseExecutionStartedRequest.runtime = protobuf_1.proto3;
AckCaseExecutionStartedRequest.typeName = "annex.tests.v1.AckCaseExecutionStartedRequest";
AckCaseExecutionStartedRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "test_execution_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "case_execution_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "start_time", kind: "message", T: protobuf_1.Timestamp },
]);
/**
 * @generated from message annex.tests.v1.AckCaseExecutionStartedResponse
 */
class AckCaseExecutionStartedResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AckCaseExecutionStartedResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AckCaseExecutionStartedResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AckCaseExecutionStartedResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AckCaseExecutionStartedResponse, a, b);
    }
}
exports.AckCaseExecutionStartedResponse = AckCaseExecutionStartedResponse;
AckCaseExecutionStartedResponse.runtime = protobuf_1.proto3;
AckCaseExecutionStartedResponse.typeName = "annex.tests.v1.AckCaseExecutionStartedResponse";
AckCaseExecutionStartedResponse.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * @generated from message annex.tests.v1.AckCaseExecutionFinishedRequest
 */
class AckCaseExecutionFinishedRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: string test_execution_id = 2;
         */
        this.testExecutionId = "";
        /**
         * @generated from field: int32 case_execution_id = 3;
         */
        this.caseExecutionId = 0;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AckCaseExecutionFinishedRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AckCaseExecutionFinishedRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AckCaseExecutionFinishedRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AckCaseExecutionFinishedRequest, a, b);
    }
}
exports.AckCaseExecutionFinishedRequest = AckCaseExecutionFinishedRequest;
AckCaseExecutionFinishedRequest.runtime = protobuf_1.proto3;
AckCaseExecutionFinishedRequest.typeName = "annex.tests.v1.AckCaseExecutionFinishedRequest";
AckCaseExecutionFinishedRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "test_execution_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "case_execution_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "finish_time", kind: "message", T: protobuf_1.Timestamp },
    { no: 5, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
]);
/**
 * @generated from message annex.tests.v1.AckCaseExecutionFinishedResponse
 */
class AckCaseExecutionFinishedResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AckCaseExecutionFinishedResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AckCaseExecutionFinishedResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AckCaseExecutionFinishedResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AckCaseExecutionFinishedResponse, a, b);
    }
}
exports.AckCaseExecutionFinishedResponse = AckCaseExecutionFinishedResponse;
AckCaseExecutionFinishedResponse.runtime = protobuf_1.proto3;
AckCaseExecutionFinishedResponse.typeName = "annex.tests.v1.AckCaseExecutionFinishedResponse";
AckCaseExecutionFinishedResponse.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * @generated from message annex.tests.v1.PublishLogRequest
 */
class PublishLogRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: string test_execution_id = 2;
         */
        this.testExecutionId = "";
        /**
         * @generated from field: string level = 4;
         */
        this.level = "";
        /**
         * @generated from field: string message = 5;
         */
        this.message = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new PublishLogRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new PublishLogRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new PublishLogRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(PublishLogRequest, a, b);
    }
}
exports.PublishLogRequest = PublishLogRequest;
PublishLogRequest.runtime = protobuf_1.proto3;
PublishLogRequest.typeName = "annex.tests.v1.PublishLogRequest";
PublishLogRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "test_execution_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "case_execution_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "level", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "create_time", kind: "message", T: protobuf_1.Timestamp },
]);
/**
 * @generated from message annex.tests.v1.PublishLogResponse
 */
class PublishLogResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string log_id = 1;
         */
        this.logId = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new PublishLogResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new PublishLogResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new PublishLogResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(PublishLogResponse, a, b);
    }
}
exports.PublishLogResponse = PublishLogResponse;
PublishLogResponse.runtime = protobuf_1.proto3;
PublishLogResponse.typeName = "annex.tests.v1.PublishLogResponse";
PublishLogResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "log_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.ListTestExecutionLogsRequest
 */
class ListTestExecutionLogsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: string test_execution_id = 2;
         */
        this.testExecutionId = "";
        /**
         * @generated from field: int32 page_size = 3;
         */
        this.pageSize = 0;
        /**
         * @generated from field: string next_page_token = 4;
         */
        this.nextPageToken = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListTestExecutionLogsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListTestExecutionLogsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListTestExecutionLogsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ListTestExecutionLogsRequest, a, b);
    }
}
exports.ListTestExecutionLogsRequest = ListTestExecutionLogsRequest;
ListTestExecutionLogsRequest.runtime = protobuf_1.proto3;
ListTestExecutionLogsRequest.typeName = "annex.tests.v1.ListTestExecutionLogsRequest";
ListTestExecutionLogsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "test_execution_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.tests.v1.ListTestExecutionLogsResponse
 */
class ListTestExecutionLogsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated annex.tests.v1.Log logs = 1;
         */
        this.logs = [];
        /**
         * @generated from field: string next_page_token = 2;
         */
        this.nextPageToken = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListTestExecutionLogsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListTestExecutionLogsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListTestExecutionLogsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ListTestExecutionLogsResponse, a, b);
    }
}
exports.ListTestExecutionLogsResponse = ListTestExecutionLogsResponse;
ListTestExecutionLogsResponse.runtime = protobuf_1.proto3;
ListTestExecutionLogsResponse.typeName = "annex.tests.v1.ListTestExecutionLogsResponse";
ListTestExecutionLogsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "logs", kind: "message", T: test_pb_js_1.Log, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
