// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file annex/tests/v1/test_service.proto (package annex.tests.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { CaseExecution, Group, Log, Payload, Test, TestDefinition, TestExecution } from "./test_pb";
import { file_annex_tests_v1_test } from "./test_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file annex/tests/v1/test_service.proto.
 */
export const file_annex_tests_v1_test_service: GenFile = /*@__PURE__*/
  fileDesc("", [file_annex_tests_v1_test, file_google_api_annotations, file_google_protobuf_timestamp]);

/**
 * @generated from message annex.tests.v1.RegisterContextRequest
 */
export type RegisterContextRequest = Message<"annex.tests.v1.RegisterContextRequest"> & {
  /**
   * @generated from field: string context = 1;
   */
  context: string;
};

/**
 * Describes the message annex.tests.v1.RegisterContextRequest.
 * Use `create(RegisterContextRequestSchema)` to create a new message.
 */
export const RegisterContextRequestSchema: GenMessage<RegisterContextRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 0);

/**
 * @generated from message annex.tests.v1.RegisterContextResponse
 */
export type RegisterContextResponse = Message<"annex.tests.v1.RegisterContextResponse"> & {
};

/**
 * Describes the message annex.tests.v1.RegisterContextResponse.
 * Use `create(RegisterContextResponseSchema)` to create a new message.
 */
export const RegisterContextResponseSchema: GenMessage<RegisterContextResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 1);

/**
 * @generated from message annex.tests.v1.ListContextsRequest
 */
export type ListContextsRequest = Message<"annex.tests.v1.ListContextsRequest"> & {
};

/**
 * Describes the message annex.tests.v1.ListContextsRequest.
 * Use `create(ListContextsRequestSchema)` to create a new message.
 */
export const ListContextsRequestSchema: GenMessage<ListContextsRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 2);

/**
 * @generated from message annex.tests.v1.ListContextsResponse
 */
export type ListContextsResponse = Message<"annex.tests.v1.ListContextsResponse"> & {
  /**
   * @generated from field: repeated string contexts = 1;
   */
  contexts: string[];
};

/**
 * Describes the message annex.tests.v1.ListContextsResponse.
 * Use `create(ListContextsResponseSchema)` to create a new message.
 */
export const ListContextsResponseSchema: GenMessage<ListContextsResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 3);

/**
 * @generated from message annex.tests.v1.RegisterGroupRequest
 */
export type RegisterGroupRequest = Message<"annex.tests.v1.RegisterGroupRequest"> & {
  /**
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message annex.tests.v1.RegisterGroupRequest.
 * Use `create(RegisterGroupRequestSchema)` to create a new message.
 */
export const RegisterGroupRequestSchema: GenMessage<RegisterGroupRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 4);

/**
 * @generated from message annex.tests.v1.RegisterGroupResponse
 */
export type RegisterGroupResponse = Message<"annex.tests.v1.RegisterGroupResponse"> & {
};

/**
 * Describes the message annex.tests.v1.RegisterGroupResponse.
 * Use `create(RegisterGroupResponseSchema)` to create a new message.
 */
export const RegisterGroupResponseSchema: GenMessage<RegisterGroupResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 5);

/**
 * @generated from message annex.tests.v1.ListGroupsRequest
 */
export type ListGroupsRequest = Message<"annex.tests.v1.ListGroupsRequest"> & {
  /**
   * @generated from field: string context = 1;
   */
  context: string;
};

/**
 * Describes the message annex.tests.v1.ListGroupsRequest.
 * Use `create(ListGroupsRequestSchema)` to create a new message.
 */
export const ListGroupsRequestSchema: GenMessage<ListGroupsRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 6);

/**
 * @generated from message annex.tests.v1.ListGroupsResponse
 */
export type ListGroupsResponse = Message<"annex.tests.v1.ListGroupsResponse"> & {
  /**
   * @generated from field: repeated annex.tests.v1.Group groups = 1;
   */
  groups: Group[];
};

/**
 * Describes the message annex.tests.v1.ListGroupsResponse.
 * Use `create(ListGroupsResponseSchema)` to create a new message.
 */
export const ListGroupsResponseSchema: GenMessage<ListGroupsResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 7);

/**
 * @generated from message annex.tests.v1.RegisterTestsRequest
 */
export type RegisterTestsRequest = Message<"annex.tests.v1.RegisterTestsRequest"> & {
  /**
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * @generated from field: string group = 2;
   */
  group: string;

  /**
   * @generated from field: repeated annex.tests.v1.TestDefinition definitions = 4;
   */
  definitions: TestDefinition[];
};

/**
 * Describes the message annex.tests.v1.RegisterTestsRequest.
 * Use `create(RegisterTestsRequestSchema)` to create a new message.
 */
export const RegisterTestsRequestSchema: GenMessage<RegisterTestsRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 8);

/**
 * @generated from message annex.tests.v1.RegisterTestsResponse
 */
export type RegisterTestsResponse = Message<"annex.tests.v1.RegisterTestsResponse"> & {
  /**
   * @generated from field: repeated annex.tests.v1.Test tests = 1;
   */
  tests: Test[];
};

/**
 * Describes the message annex.tests.v1.RegisterTestsResponse.
 * Use `create(RegisterTestsResponseSchema)` to create a new message.
 */
export const RegisterTestsResponseSchema: GenMessage<RegisterTestsResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 9);

/**
 * @generated from message annex.tests.v1.ListTestsRequest
 */
export type ListTestsRequest = Message<"annex.tests.v1.ListTestsRequest"> & {
  /**
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * @generated from field: string group = 2;
   */
  group: string;

  /**
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * @generated from field: string next_page_token = 4;
   */
  nextPageToken: string;
};

/**
 * Describes the message annex.tests.v1.ListTestsRequest.
 * Use `create(ListTestsRequestSchema)` to create a new message.
 */
export const ListTestsRequestSchema: GenMessage<ListTestsRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 10);

/**
 * @generated from message annex.tests.v1.ListTestsResponse
 */
export type ListTestsResponse = Message<"annex.tests.v1.ListTestsResponse"> & {
  /**
   * @generated from field: repeated annex.tests.v1.Test tests = 1;
   */
  tests: Test[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message annex.tests.v1.ListTestsResponse.
 * Use `create(ListTestsResponseSchema)` to create a new message.
 */
export const ListTestsResponseSchema: GenMessage<ListTestsResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 11);

/**
 * @generated from message annex.tests.v1.GetTestRequest
 */
export type GetTestRequest = Message<"annex.tests.v1.GetTestRequest"> & {
  /**
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * @generated from field: string test_id = 2;
   */
  testId: string;
};

/**
 * Describes the message annex.tests.v1.GetTestRequest.
 * Use `create(GetTestRequestSchema)` to create a new message.
 */
export const GetTestRequestSchema: GenMessage<GetTestRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 12);

/**
 * @generated from message annex.tests.v1.GetTestResponse
 */
export type GetTestResponse = Message<"annex.tests.v1.GetTestResponse"> & {
  /**
   * @generated from field: annex.tests.v1.Test test = 1;
   */
  test?: Test;
};

/**
 * Describes the message annex.tests.v1.GetTestResponse.
 * Use `create(GetTestResponseSchema)` to create a new message.
 */
export const GetTestResponseSchema: GenMessage<GetTestResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 13);

/**
 * @generated from message annex.tests.v1.GetTestDefaultInputRequest
 */
export type GetTestDefaultInputRequest = Message<"annex.tests.v1.GetTestDefaultInputRequest"> & {
  /**
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * @generated from field: string test_id = 2;
   */
  testId: string;
};

/**
 * Describes the message annex.tests.v1.GetTestDefaultInputRequest.
 * Use `create(GetTestDefaultInputRequestSchema)` to create a new message.
 */
export const GetTestDefaultInputRequestSchema: GenMessage<GetTestDefaultInputRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 14);

/**
 * @generated from message annex.tests.v1.GetTestDefaultInputResponse
 */
export type GetTestDefaultInputResponse = Message<"annex.tests.v1.GetTestDefaultInputResponse"> & {
  /**
   * @generated from field: string default_input = 1;
   */
  defaultInput: string;
};

/**
 * Describes the message annex.tests.v1.GetTestDefaultInputResponse.
 * Use `create(GetTestDefaultInputResponseSchema)` to create a new message.
 */
export const GetTestDefaultInputResponseSchema: GenMessage<GetTestDefaultInputResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 15);

/**
 * @generated from message annex.tests.v1.ExecuteTestRequest
 */
export type ExecuteTestRequest = Message<"annex.tests.v1.ExecuteTestRequest"> & {
  /**
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * @generated from field: string test_id = 2;
   */
  testId: string;

  /**
   * @generated from field: optional annex.tests.v1.Payload input = 3;
   */
  input?: Payload;
};

/**
 * Describes the message annex.tests.v1.ExecuteTestRequest.
 * Use `create(ExecuteTestRequestSchema)` to create a new message.
 */
export const ExecuteTestRequestSchema: GenMessage<ExecuteTestRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 16);

/**
 * @generated from message annex.tests.v1.ExecuteTestResponse
 */
export type ExecuteTestResponse = Message<"annex.tests.v1.ExecuteTestResponse"> & {
  /**
   * @generated from field: annex.tests.v1.TestExecution test_execution = 1;
   */
  testExecution?: TestExecution;
};

/**
 * Describes the message annex.tests.v1.ExecuteTestResponse.
 * Use `create(ExecuteTestResponseSchema)` to create a new message.
 */
export const ExecuteTestResponseSchema: GenMessage<ExecuteTestResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 17);

/**
 * @generated from message annex.tests.v1.RetryTestExecutionRequest
 */
export type RetryTestExecutionRequest = Message<"annex.tests.v1.RetryTestExecutionRequest"> & {
  /**
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * @generated from field: string test_execution_id = 2;
   */
  testExecutionId: string;
};

/**
 * Describes the message annex.tests.v1.RetryTestExecutionRequest.
 * Use `create(RetryTestExecutionRequestSchema)` to create a new message.
 */
export const RetryTestExecutionRequestSchema: GenMessage<RetryTestExecutionRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 18);

/**
 * @generated from message annex.tests.v1.RetryTestExecutionResponse
 */
export type RetryTestExecutionResponse = Message<"annex.tests.v1.RetryTestExecutionResponse"> & {
  /**
   * @generated from field: annex.tests.v1.TestExecution test_execution = 1;
   */
  testExecution?: TestExecution;
};

/**
 * Describes the message annex.tests.v1.RetryTestExecutionResponse.
 * Use `create(RetryTestExecutionResponseSchema)` to create a new message.
 */
export const RetryTestExecutionResponseSchema: GenMessage<RetryTestExecutionResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 19);

/**
 * @generated from message annex.tests.v1.GetTestExecutionRequest
 */
export type GetTestExecutionRequest = Message<"annex.tests.v1.GetTestExecutionRequest"> & {
  /**
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * @generated from field: string test_execution_id = 2;
   */
  testExecutionId: string;
};

/**
 * Describes the message annex.tests.v1.GetTestExecutionRequest.
 * Use `create(GetTestExecutionRequestSchema)` to create a new message.
 */
export const GetTestExecutionRequestSchema: GenMessage<GetTestExecutionRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 20);

/**
 * @generated from message annex.tests.v1.GetTestExecutionResponse
 */
export type GetTestExecutionResponse = Message<"annex.tests.v1.GetTestExecutionResponse"> & {
  /**
   * @generated from field: annex.tests.v1.TestExecution test_execution = 1;
   */
  testExecution?: TestExecution;

  /**
   * @generated from field: optional annex.tests.v1.Payload input = 2;
   */
  input?: Payload;
};

/**
 * Describes the message annex.tests.v1.GetTestExecutionResponse.
 * Use `create(GetTestExecutionResponseSchema)` to create a new message.
 */
export const GetTestExecutionResponseSchema: GenMessage<GetTestExecutionResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 21);

/**
 * @generated from message annex.tests.v1.ListTestExecutionsRequest
 */
export type ListTestExecutionsRequest = Message<"annex.tests.v1.ListTestExecutionsRequest"> & {
  /**
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * @generated from field: string test_id = 2;
   */
  testId: string;

  /**
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * @generated from field: string next_page_token = 4;
   */
  nextPageToken: string;
};

/**
 * Describes the message annex.tests.v1.ListTestExecutionsRequest.
 * Use `create(ListTestExecutionsRequestSchema)` to create a new message.
 */
export const ListTestExecutionsRequestSchema: GenMessage<ListTestExecutionsRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 22);

/**
 * @generated from message annex.tests.v1.ListTestExecutionsResponse
 */
export type ListTestExecutionsResponse = Message<"annex.tests.v1.ListTestExecutionsResponse"> & {
  /**
   * @generated from field: repeated annex.tests.v1.TestExecution test_executions = 1;
   */
  testExecutions: TestExecution[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message annex.tests.v1.ListTestExecutionsResponse.
 * Use `create(ListTestExecutionsResponseSchema)` to create a new message.
 */
export const ListTestExecutionsResponseSchema: GenMessage<ListTestExecutionsResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 23);

/**
 * @generated from message annex.tests.v1.ListCaseExecutionsRequest
 */
export type ListCaseExecutionsRequest = Message<"annex.tests.v1.ListCaseExecutionsRequest"> & {
  /**
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * @generated from field: string test_execution_id = 2;
   */
  testExecutionId: string;
};

/**
 * Describes the message annex.tests.v1.ListCaseExecutionsRequest.
 * Use `create(ListCaseExecutionsRequestSchema)` to create a new message.
 */
export const ListCaseExecutionsRequestSchema: GenMessage<ListCaseExecutionsRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 24);

/**
 * @generated from message annex.tests.v1.ListCaseExecutionsResponse
 */
export type ListCaseExecutionsResponse = Message<"annex.tests.v1.ListCaseExecutionsResponse"> & {
  /**
   * @generated from field: repeated annex.tests.v1.CaseExecution case_executions = 1;
   */
  caseExecutions: CaseExecution[];
};

/**
 * Describes the message annex.tests.v1.ListCaseExecutionsResponse.
 * Use `create(ListCaseExecutionsResponseSchema)` to create a new message.
 */
export const ListCaseExecutionsResponseSchema: GenMessage<ListCaseExecutionsResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 25);

/**
 * @generated from message annex.tests.v1.AckTestExecutionStartedRequest
 */
export type AckTestExecutionStartedRequest = Message<"annex.tests.v1.AckTestExecutionStartedRequest"> & {
  /**
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * @generated from field: string test_execution_id = 2;
   */
  testExecutionId: string;

  /**
   * @generated from field: google.protobuf.Timestamp start_time = 3;
   */
  startTime?: Timestamp;
};

/**
 * Describes the message annex.tests.v1.AckTestExecutionStartedRequest.
 * Use `create(AckTestExecutionStartedRequestSchema)` to create a new message.
 */
export const AckTestExecutionStartedRequestSchema: GenMessage<AckTestExecutionStartedRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 26);

/**
 * @generated from message annex.tests.v1.AckTestExecutionStartedResponse
 */
export type AckTestExecutionStartedResponse = Message<"annex.tests.v1.AckTestExecutionStartedResponse"> & {
};

/**
 * Describes the message annex.tests.v1.AckTestExecutionStartedResponse.
 * Use `create(AckTestExecutionStartedResponseSchema)` to create a new message.
 */
export const AckTestExecutionStartedResponseSchema: GenMessage<AckTestExecutionStartedResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 27);

/**
 * @generated from message annex.tests.v1.AckTestExecutionFinishedRequest
 */
export type AckTestExecutionFinishedRequest = Message<"annex.tests.v1.AckTestExecutionFinishedRequest"> & {
  /**
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * @generated from field: string test_execution_id = 2;
   */
  testExecutionId: string;

  /**
   * @generated from field: google.protobuf.Timestamp finish_time = 3;
   */
  finishTime?: Timestamp;

  /**
   * @generated from field: optional string error = 4;
   */
  error?: string;
};

/**
 * Describes the message annex.tests.v1.AckTestExecutionFinishedRequest.
 * Use `create(AckTestExecutionFinishedRequestSchema)` to create a new message.
 */
export const AckTestExecutionFinishedRequestSchema: GenMessage<AckTestExecutionFinishedRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 28);

/**
 * @generated from message annex.tests.v1.AckTestExecutionFinishedResponse
 */
export type AckTestExecutionFinishedResponse = Message<"annex.tests.v1.AckTestExecutionFinishedResponse"> & {
};

/**
 * Describes the message annex.tests.v1.AckTestExecutionFinishedResponse.
 * Use `create(AckTestExecutionFinishedResponseSchema)` to create a new message.
 */
export const AckTestExecutionFinishedResponseSchema: GenMessage<AckTestExecutionFinishedResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 29);

/**
 * @generated from message annex.tests.v1.AckCaseExecutionScheduledRequest
 */
export type AckCaseExecutionScheduledRequest = Message<"annex.tests.v1.AckCaseExecutionScheduledRequest"> & {
  /**
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * @generated from field: string test_execution_id = 2;
   */
  testExecutionId: string;

  /**
   * @generated from field: int32 case_execution_id = 3;
   */
  caseExecutionId: number;

  /**
   * @generated from field: string case_name = 4;
   */
  caseName: string;

  /**
   * @generated from field: google.protobuf.Timestamp schedule_time = 5;
   */
  scheduleTime?: Timestamp;
};

/**
 * Describes the message annex.tests.v1.AckCaseExecutionScheduledRequest.
 * Use `create(AckCaseExecutionScheduledRequestSchema)` to create a new message.
 */
export const AckCaseExecutionScheduledRequestSchema: GenMessage<AckCaseExecutionScheduledRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 30);

/**
 * @generated from message annex.tests.v1.AckCaseExecutionScheduledResponse
 */
export type AckCaseExecutionScheduledResponse = Message<"annex.tests.v1.AckCaseExecutionScheduledResponse"> & {
};

/**
 * Describes the message annex.tests.v1.AckCaseExecutionScheduledResponse.
 * Use `create(AckCaseExecutionScheduledResponseSchema)` to create a new message.
 */
export const AckCaseExecutionScheduledResponseSchema: GenMessage<AckCaseExecutionScheduledResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 31);

/**
 * @generated from message annex.tests.v1.AckCaseExecutionStartedRequest
 */
export type AckCaseExecutionStartedRequest = Message<"annex.tests.v1.AckCaseExecutionStartedRequest"> & {
  /**
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * @generated from field: string test_execution_id = 2;
   */
  testExecutionId: string;

  /**
   * @generated from field: int32 case_execution_id = 3;
   */
  caseExecutionId: number;

  /**
   * @generated from field: google.protobuf.Timestamp start_time = 4;
   */
  startTime?: Timestamp;
};

/**
 * Describes the message annex.tests.v1.AckCaseExecutionStartedRequest.
 * Use `create(AckCaseExecutionStartedRequestSchema)` to create a new message.
 */
export const AckCaseExecutionStartedRequestSchema: GenMessage<AckCaseExecutionStartedRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 32);

/**
 * @generated from message annex.tests.v1.AckCaseExecutionStartedResponse
 */
export type AckCaseExecutionStartedResponse = Message<"annex.tests.v1.AckCaseExecutionStartedResponse"> & {
};

/**
 * Describes the message annex.tests.v1.AckCaseExecutionStartedResponse.
 * Use `create(AckCaseExecutionStartedResponseSchema)` to create a new message.
 */
export const AckCaseExecutionStartedResponseSchema: GenMessage<AckCaseExecutionStartedResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 33);

/**
 * @generated from message annex.tests.v1.AckCaseExecutionFinishedRequest
 */
export type AckCaseExecutionFinishedRequest = Message<"annex.tests.v1.AckCaseExecutionFinishedRequest"> & {
  /**
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * @generated from field: string test_execution_id = 2;
   */
  testExecutionId: string;

  /**
   * @generated from field: int32 case_execution_id = 3;
   */
  caseExecutionId: number;

  /**
   * @generated from field: google.protobuf.Timestamp finish_time = 4;
   */
  finishTime?: Timestamp;

  /**
   * @generated from field: optional string error = 5;
   */
  error?: string;
};

/**
 * Describes the message annex.tests.v1.AckCaseExecutionFinishedRequest.
 * Use `create(AckCaseExecutionFinishedRequestSchema)` to create a new message.
 */
export const AckCaseExecutionFinishedRequestSchema: GenMessage<AckCaseExecutionFinishedRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 34);

/**
 * @generated from message annex.tests.v1.AckCaseExecutionFinishedResponse
 */
export type AckCaseExecutionFinishedResponse = Message<"annex.tests.v1.AckCaseExecutionFinishedResponse"> & {
};

/**
 * Describes the message annex.tests.v1.AckCaseExecutionFinishedResponse.
 * Use `create(AckCaseExecutionFinishedResponseSchema)` to create a new message.
 */
export const AckCaseExecutionFinishedResponseSchema: GenMessage<AckCaseExecutionFinishedResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 35);

/**
 * @generated from message annex.tests.v1.PublishLogRequest
 */
export type PublishLogRequest = Message<"annex.tests.v1.PublishLogRequest"> & {
  /**
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * @generated from field: string test_execution_id = 2;
   */
  testExecutionId: string;

  /**
   * @generated from field: optional int32 case_execution_id = 3;
   */
  caseExecutionId?: number;

  /**
   * @generated from field: string level = 4;
   */
  level: string;

  /**
   * @generated from field: string message = 5;
   */
  message: string;

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 6;
   */
  createTime?: Timestamp;
};

/**
 * Describes the message annex.tests.v1.PublishLogRequest.
 * Use `create(PublishLogRequestSchema)` to create a new message.
 */
export const PublishLogRequestSchema: GenMessage<PublishLogRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 36);

/**
 * @generated from message annex.tests.v1.PublishLogResponse
 */
export type PublishLogResponse = Message<"annex.tests.v1.PublishLogResponse"> & {
  /**
   * @generated from field: string log_id = 1;
   */
  logId: string;
};

/**
 * Describes the message annex.tests.v1.PublishLogResponse.
 * Use `create(PublishLogResponseSchema)` to create a new message.
 */
export const PublishLogResponseSchema: GenMessage<PublishLogResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 37);

/**
 * @generated from message annex.tests.v1.ListTestExecutionLogsRequest
 */
export type ListTestExecutionLogsRequest = Message<"annex.tests.v1.ListTestExecutionLogsRequest"> & {
  /**
   * @generated from field: string context = 1;
   */
  context: string;

  /**
   * @generated from field: string test_execution_id = 2;
   */
  testExecutionId: string;
};

/**
 * Describes the message annex.tests.v1.ListTestExecutionLogsRequest.
 * Use `create(ListTestExecutionLogsRequestSchema)` to create a new message.
 */
export const ListTestExecutionLogsRequestSchema: GenMessage<ListTestExecutionLogsRequest> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 38);

/**
 * @generated from message annex.tests.v1.ListTestExecutionLogsResponse
 */
export type ListTestExecutionLogsResponse = Message<"annex.tests.v1.ListTestExecutionLogsResponse"> & {
  /**
   * @generated from field: repeated annex.tests.v1.Log logs = 1;
   */
  logs: Log[];
};

/**
 * Describes the message annex.tests.v1.ListTestExecutionLogsResponse.
 * Use `create(ListTestExecutionLogsResponseSchema)` to create a new message.
 */
export const ListTestExecutionLogsResponseSchema: GenMessage<ListTestExecutionLogsResponse> = /*@__PURE__*/
  messageDesc(file_annex_tests_v1_test_service, 39);

/**
 * @generated from service annex.tests.v1.TestService
 */
export const TestService: GenService<{
  /**
   * @generated from rpc annex.tests.v1.TestService.ListContexts
   */
  listContexts: {
    methodKind: "unary";
    input: typeof ListContextsRequestSchema;
    output: typeof ListContextsResponseSchema;
  },
  /**
   * @generated from rpc annex.tests.v1.TestService.ListGroups
   */
  listGroups: {
    methodKind: "unary";
    input: typeof ListGroupsRequestSchema;
    output: typeof ListGroupsResponseSchema;
  },
  /**
   * @generated from rpc annex.tests.v1.TestService.ListTests
   */
  listTests: {
    methodKind: "unary";
    input: typeof ListTestsRequestSchema;
    output: typeof ListTestsResponseSchema;
  },
  /**
   * @generated from rpc annex.tests.v1.TestService.GetTest
   */
  getTest: {
    methodKind: "unary";
    input: typeof GetTestRequestSchema;
    output: typeof GetTestResponseSchema;
  },
  /**
   * @generated from rpc annex.tests.v1.TestService.GetTestDefaultInput
   */
  getTestDefaultInput: {
    methodKind: "unary";
    input: typeof GetTestDefaultInputRequestSchema;
    output: typeof GetTestDefaultInputResponseSchema;
  },
  /**
   * @generated from rpc annex.tests.v1.TestService.ExecuteTest
   */
  executeTest: {
    methodKind: "unary";
    input: typeof ExecuteTestRequestSchema;
    output: typeof ExecuteTestResponseSchema;
  },
  /**
   * @generated from rpc annex.tests.v1.TestService.RetryTestExecution
   */
  retryTestExecution: {
    methodKind: "unary";
    input: typeof RetryTestExecutionRequestSchema;
    output: typeof RetryTestExecutionResponseSchema;
  },
  /**
   * @generated from rpc annex.tests.v1.TestService.GetTestExecution
   */
  getTestExecution: {
    methodKind: "unary";
    input: typeof GetTestExecutionRequestSchema;
    output: typeof GetTestExecutionResponseSchema;
  },
  /**
   * @generated from rpc annex.tests.v1.TestService.ListTestExecutions
   */
  listTestExecutions: {
    methodKind: "unary";
    input: typeof ListTestExecutionsRequestSchema;
    output: typeof ListTestExecutionsResponseSchema;
  },
  /**
   * @generated from rpc annex.tests.v1.TestService.ListCaseExecutions
   */
  listCaseExecutions: {
    methodKind: "unary";
    input: typeof ListCaseExecutionsRequestSchema;
    output: typeof ListCaseExecutionsResponseSchema;
  },
  /**
   * @generated from rpc annex.tests.v1.TestService.ListTestExecutionLogs
   */
  listTestExecutionLogs: {
    methodKind: "unary";
    input: typeof ListTestExecutionLogsRequestSchema;
    output: typeof ListTestExecutionLogsResponseSchema;
  },
  /**
   * @generated from rpc annex.tests.v1.TestService.RegisterContext
   */
  registerContext: {
    methodKind: "unary";
    input: typeof RegisterContextRequestSchema;
    output: typeof RegisterContextResponseSchema;
  },
  /**
   * @generated from rpc annex.tests.v1.TestService.RegisterGroup
   */
  registerGroup: {
    methodKind: "unary";
    input: typeof RegisterGroupRequestSchema;
    output: typeof RegisterGroupResponseSchema;
  },
  /**
   * @generated from rpc annex.tests.v1.TestService.RegisterTests
   */
  registerTests: {
    methodKind: "unary";
    input: typeof RegisterTestsRequestSchema;
    output: typeof RegisterTestsResponseSchema;
  },
  /**
   * @generated from rpc annex.tests.v1.TestService.AckTestExecutionStarted
   */
  ackTestExecutionStarted: {
    methodKind: "unary";
    input: typeof AckTestExecutionStartedRequestSchema;
    output: typeof AckTestExecutionStartedResponseSchema;
  },
  /**
   * @generated from rpc annex.tests.v1.TestService.AckTestExecutionFinished
   */
  ackTestExecutionFinished: {
    methodKind: "unary";
    input: typeof AckTestExecutionFinishedRequestSchema;
    output: typeof AckTestExecutionFinishedResponseSchema;
  },
  /**
   * @generated from rpc annex.tests.v1.TestService.AckCaseExecutionScheduled
   */
  ackCaseExecutionScheduled: {
    methodKind: "unary";
    input: typeof AckCaseExecutionScheduledRequestSchema;
    output: typeof AckCaseExecutionScheduledResponseSchema;
  },
  /**
   * @generated from rpc annex.tests.v1.TestService.AckCaseExecutionStarted
   */
  ackCaseExecutionStarted: {
    methodKind: "unary";
    input: typeof AckCaseExecutionStartedRequestSchema;
    output: typeof AckCaseExecutionStartedResponseSchema;
  },
  /**
   * @generated from rpc annex.tests.v1.TestService.AckCaseExecutionFinished
   */
  ackCaseExecutionFinished: {
    methodKind: "unary";
    input: typeof AckCaseExecutionFinishedRequestSchema;
    output: typeof AckCaseExecutionFinishedResponseSchema;
  },
  /**
   * @generated from rpc annex.tests.v1.TestService.PublishLog
   */
  publishLog: {
    methodKind: "unary";
    input: typeof PublishLogRequestSchema;
    output: typeof PublishLogResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_annex_tests_v1_test_service, 0);

