"use strict";
// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file annex/events/v1/event_service.proto (package annex.events.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.StreamTestExecutionEventsResponse = exports.StreamTestExecutionEventsRequest = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const event_pb_js_1 = require("./event_pb.js");
/**
 * @generated from message annex.events.v1.StreamTestExecutionEventsRequest
 */
class StreamTestExecutionEventsRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string context = 1;
         */
        this.context = "";
        /**
         * @generated from field: string test_execution_id = 2;
         */
        this.testExecutionId = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new StreamTestExecutionEventsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StreamTestExecutionEventsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StreamTestExecutionEventsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StreamTestExecutionEventsRequest, a, b);
    }
}
exports.StreamTestExecutionEventsRequest = StreamTestExecutionEventsRequest;
StreamTestExecutionEventsRequest.runtime = protobuf_1.proto3;
StreamTestExecutionEventsRequest.typeName = "annex.events.v1.StreamTestExecutionEventsRequest";
StreamTestExecutionEventsRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "context", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "test_execution_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message annex.events.v1.StreamTestExecutionEventsResponse
 */
class StreamTestExecutionEventsResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new StreamTestExecutionEventsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StreamTestExecutionEventsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StreamTestExecutionEventsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(StreamTestExecutionEventsResponse, a, b);
    }
}
exports.StreamTestExecutionEventsResponse = StreamTestExecutionEventsResponse;
StreamTestExecutionEventsResponse.runtime = protobuf_1.proto3;
StreamTestExecutionEventsResponse.typeName = "annex.events.v1.StreamTestExecutionEventsResponse";
StreamTestExecutionEventsResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "event", kind: "message", T: event_pb_js_1.Event },
]);
