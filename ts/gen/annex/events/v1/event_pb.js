"use strict";
// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file annex/events/v1/event.proto (package annex.events.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Event_Data_Type = exports.Event_Data = exports.Event_Type = exports.Event = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const test_pb_js_1 = require("../../tests/v1/test_pb.js");
/**
 * @generated from message annex.events.v1.Event
 */
class Event extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string event_id = 1;
         */
        this.eventId = "";
        /**
         * @generated from field: string test_execution_id = 2;
         */
        this.testExecutionId = "";
        /**
         * @generated from field: annex.events.v1.Event.Type type = 3;
         */
        this.type = Event_Type.UNSPECIFIED;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Event().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Event().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Event().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Event, a, b);
    }
}
exports.Event = Event;
Event.runtime = protobuf_1.proto3;
Event.typeName = "annex.events.v1.Event";
Event.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "event_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "test_execution_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "type", kind: "enum", T: protobuf_1.proto3.getEnumType(Event_Type) },
    { no: 4, name: "data", kind: "message", T: Event_Data },
    { no: 5, name: "create_time", kind: "message", T: protobuf_1.Timestamp },
]);
/**
 * @generated from enum annex.events.v1.Event.Type
 */
var Event_Type;
(function (Event_Type) {
    /**
     * @generated from enum value: TYPE_UNSPECIFIED = 0;
     */
    Event_Type[Event_Type["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: TYPE_TEST_EXECUTION_SCHEDULED = 1;
     */
    Event_Type[Event_Type["TEST_EXECUTION_SCHEDULED"] = 1] = "TEST_EXECUTION_SCHEDULED";
    /**
     * @generated from enum value: TYPE_TEST_EXECUTION_STARTED = 2;
     */
    Event_Type[Event_Type["TEST_EXECUTION_STARTED"] = 2] = "TEST_EXECUTION_STARTED";
    /**
     * @generated from enum value: TYPE_TEST_EXECUTION_FINISHED = 3;
     */
    Event_Type[Event_Type["TEST_EXECUTION_FINISHED"] = 3] = "TEST_EXECUTION_FINISHED";
    /**
     * @generated from enum value: TYPE_CASE_EXECUTION_SCHEDULED = 4;
     */
    Event_Type[Event_Type["CASE_EXECUTION_SCHEDULED"] = 4] = "CASE_EXECUTION_SCHEDULED";
    /**
     * @generated from enum value: TYPE_CASE_EXECUTION_STARTED = 5;
     */
    Event_Type[Event_Type["CASE_EXECUTION_STARTED"] = 5] = "CASE_EXECUTION_STARTED";
    /**
     * @generated from enum value: TYPE_CASE_EXECUTION_FINISHED = 6;
     */
    Event_Type[Event_Type["CASE_EXECUTION_FINISHED"] = 6] = "CASE_EXECUTION_FINISHED";
    /**
     * @generated from enum value: TYPE_LOG_PUBLISHED = 7;
     */
    Event_Type[Event_Type["LOG_PUBLISHED"] = 7] = "LOG_PUBLISHED";
})(Event_Type || (exports.Event_Type = Event_Type = {}));
// Retrieve enum metadata with: proto3.getEnumType(Event_Type)
protobuf_1.proto3.util.setEnumType(Event_Type, "annex.events.v1.Event.Type", [
    { no: 0, name: "TYPE_UNSPECIFIED" },
    { no: 1, name: "TYPE_TEST_EXECUTION_SCHEDULED" },
    { no: 2, name: "TYPE_TEST_EXECUTION_STARTED" },
    { no: 3, name: "TYPE_TEST_EXECUTION_FINISHED" },
    { no: 4, name: "TYPE_CASE_EXECUTION_SCHEDULED" },
    { no: 5, name: "TYPE_CASE_EXECUTION_STARTED" },
    { no: 6, name: "TYPE_CASE_EXECUTION_FINISHED" },
    { no: 7, name: "TYPE_LOG_PUBLISHED" },
]);
/**
 * @generated from message annex.events.v1.Event.Data
 */
class Event_Data extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: annex.events.v1.Event.Data.Type type = 1;
         */
        this.type = Event_Data_Type.UNSPECIFIED;
        /**
         * @generated from oneof annex.events.v1.Event.Data.data
         */
        this.data = { case: undefined };
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Event_Data().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Event_Data().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Event_Data().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Event_Data, a, b);
    }
}
exports.Event_Data = Event_Data;
Event_Data.runtime = protobuf_1.proto3;
Event_Data.typeName = "annex.events.v1.Event.Data";
Event_Data.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "enum", T: protobuf_1.proto3.getEnumType(Event_Data_Type) },
    { no: 2, name: "test_execution", kind: "message", T: test_pb_js_1.TestExecution, oneof: "data" },
    { no: 3, name: "case_execution", kind: "message", T: test_pb_js_1.CaseExecution, oneof: "data" },
    { no: 4, name: "log", kind: "message", T: test_pb_js_1.Log, oneof: "data" },
]);
/**
 * @generated from enum annex.events.v1.Event.Data.Type
 */
var Event_Data_Type;
(function (Event_Data_Type) {
    /**
     * @generated from enum value: TYPE_UNSPECIFIED = 0;
     */
    Event_Data_Type[Event_Data_Type["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: TYPE_NONE = 1;
     */
    Event_Data_Type[Event_Data_Type["NONE"] = 1] = "NONE";
    /**
     * @generated from enum value: TYPE_TEST_EXECUTION = 2;
     */
    Event_Data_Type[Event_Data_Type["TEST_EXECUTION"] = 2] = "TEST_EXECUTION";
    /**
     * @generated from enum value: TYPE_CASE_EXECUTION = 3;
     */
    Event_Data_Type[Event_Data_Type["CASE_EXECUTION"] = 3] = "CASE_EXECUTION";
    /**
     * @generated from enum value: TYPE_LOG = 4;
     */
    Event_Data_Type[Event_Data_Type["LOG"] = 4] = "LOG";
})(Event_Data_Type || (exports.Event_Data_Type = Event_Data_Type = {}));
// Retrieve enum metadata with: proto3.getEnumType(Event_Data_Type)
protobuf_1.proto3.util.setEnumType(Event_Data_Type, "annex.events.v1.Event.Data.Type", [
    { no: 0, name: "TYPE_UNSPECIFIED" },
    { no: 1, name: "TYPE_NONE" },
    { no: 2, name: "TYPE_TEST_EXECUTION" },
    { no: 3, name: "TYPE_CASE_EXECUTION" },
    { no: 4, name: "TYPE_LOG" },
]);
